#
# Cross-Compiler variables for ARM platform
# -----------------------------------------
#
# Based on uClibc toolchain generated by buildroot.
# See http://buildroot.uclibc.org for more information.
# 
# Written by Lucas Correia Villa Real <lucasvr@gobolinux.org>
#
source GoboPath

#
# root directory where cross-compiled programs will get installed
#
export crossPrefixDir="/Depot/Cross-ARM"

#
# toolchainDir must be set to the root dir of your toolchain
#
toolchainDir="/Depot/ToolChains/ARM-uClibc"
toolchainBinDir="$toolchainDir/bin"
toolchainLibDir="$toolchainDir/lib"

#
# you can usually perform a 'find /path/to/toolchain -name 3.4.4' or
# similar, matching your GCC version, in order to figure the libexec dir
#
toolchainLibExecDir="$toolchainDir/libexec/gcc/arm-linux-uclibc/3.4.4"
toolchainGCCIncDir="$toolchainLibDir/arm-linux-uclibc/sys-include"
crossCompiler="arm-linux-uclibc-"

#
# environment variable replacements follow
# replace MACHINE_ARCH by what "-march" targets
# replace CPU by what "-mcpu" targets
# replace ARCH by a valid output of uname -m for the target machine
#
export MACHINE_ARCH="armv5te"
export CPU="xscale"
export TARGET="arm-pxa-linux"
export HOST="i686-pc-linux-gnu"
export ARCH="arm"

#
# usually you won't need to replace the data below
#
export CC="${crossCompiler}gcc"
export CPP="${crossCompiler}cpp"
export CXX="${crossCompiler}g++"
export CXXCPP="${crossCompiler}cpp"
export FC="${crossCompiler}f77"
export STRIP="${crossCompiler}strip"

export PATH="${toolchainBinDir}:${PATH}"
export GCC_EXEC_PREFIX="${toolchainLibDir}/gcc"
export PKG_CONFIG_PATH="${crossPrefixDir}/${goboLibraries}/pkgconfig"

export HOSTCC=`which gcc`
export HOSTCFLAGS="-I${goboHeaders} ${CFLAGS}"
export HOSTLDFLAGS="-L${goboLibraries} ${LDFLAGS}"
export NATIVE_CFLAGS="${HOSTCFLAGS}"
export NATIVE_LDFLAGS="${HOSTLDFLAGS}"

export GCCINCDIR=`${CC} -print-search-dirs | sed -ne "s/install: \(.*\)/\1include/gp"`
export CFLAGS="-nostdinc -I${crossPrefixDir}/${goboHeaders} -iwithprefix ${toolchainGCCIncDir} -I${GCCINCDIR} -mtune=${CPU}"
export LDFLAGS="-L${crossPrefixDir}/${goboLibraries} -L${toolchainLibDir} -L${toolchainDir}/usr/lib"
export CXXFLAGS="${CFLAGS} -I${toolchainDir}/include/c++/3.4.4"

C_INCLUDE_PATH="${crossPrefixDir}${goboHeaders}"
C_INCLUDE_PATH="${C_INCLUDE_PATH}:${toolchainDir}/${toolchainGCCIncDir}"
C_INCLUDE_PATH="${C_INCLUDE_PATH}:${GCCINCDIR}"
C_INCLUDE_PATH="${C_INCLUDE_PATH}:${toolchainDir}/${toolchainGCCIncDir}/../install-tools/include"
export C_INCLUDE_PATH
export CPLUS_INCLUDE_PATH="${C_INCLUDE_PATH}:${toolchainDir}/include/c++/3.4.4"
