#!/bin/sh

for conf in ./Master.conf /System/Settings/BuildLiveCD/Master.conf fail
do
   if [ "$conf" = "fail" ]
   then
      echo "Could not find Master.conf."
      exit 1
   elif [ -e $conf ]
   then
      source $conf
      break
   fi
done

mp="output/Environment"
layer1="output/Layer1"
layer2="LiveCD_work/Layer2"

# Problem using UnionSandbox in chroot
export UNIONSANDBOX="false"

if [ "$UID" != "0" ]
then
    echo "Running as superuser."
    exec sudo -u "#0" $0 $*
fi

rw_layer_bn="Layer2"
[ "$1" ] && rw_layer_bn="$1"

if [ -d "$mp" ]
then
   echo "Unionfs mounting layers."
   unionfs_dirs=""
   for layer in "${chroot_layers[@]}"
   do
      layer_bn=`basename $layer`
      if [ "$rw_layer_bn" = "$layer_bn" ]
      then
         rw_layer="$layer"
	 echo "   $layer is writable"
      else
         unionfs_dirs="$unionfs_dirs:${layer}=ro"
      fi
   done
   unionfs_dirs="dirs=${rw_layer}=rw${unionfs_dirs}"
   echo mount -t unionfs -o ${unionfs_dirs} none ${mp}
   mount -t unionfs -o ${unionfs_dirs} none ${mp}

   echo "Binding "  ${mp}/Mount/CD-ROM " ..."
   mount -o bind Mount_CD-ROM ${mp}/Mount/CD-ROM
   mount -o bind /Programs    ${mp}/Mount/CD-ROM/Programs_Local
   mount -o bind /Depot       ${mp}/Mount/CD-ROM/Depot_Local
   mount -o bind /Users       ${mp}/Mount/CD-ROM/Users_Local
   mount -o bind Packages     ${mp}/Mount/CD-ROM/Packages

   echo "        "  ${mp}/System/Kernel/Devices " ..."
   mount -o bind /System/Kernel/Devices ${mp}/System/Kernel/Devices
   echo "        " ${mp}/System/Kernel/Status  " ..."
   mount -o bind /System/Kernel/Status ${mp}/System/Kernel/Status

   echo "Chrooting into ${mp} "
   chroot ${mp}

   sync

   #####################################################################

   echo "Cleaning up /tmp..."
   rm -fr -- ${mp}/tmp/*

   echo "Unmounting:"
   mp_path=`readlink -f ${mp}`
   cat /proc/mounts |tac | cut -d' ' -f2 |grep $mp_path | \
   while read dir
   do
      echo "  " "${dir}"
      umount "${dir}"
   done

else
   echo "Error: $mp" "dont exist."
fi

# additional thing to check before releasing a LiveCD
# cd /Programs/; time for i in *; do echo $i; mkdir $i/Current/Resources/; Dependencies $i > $i/Current/Resources/Dependencies; done
# cd /Programs/; du --max-depth=1 > /Depot/Install/Wizard/Auxiliary/Programs_du.txt
# cd /Programs/; \ls > /Depot/Install/Wizard/Profiles/Full
# cd /Programs/; grep Warn */Current/Resources/Dependencies
# cd /Depot/Install/Wizard/Profiles/; for i in `cat Typical`; do [ "`grep "$i" Full`" ] || echo $i; done
# cd /Depot/Install/Wizard/Profiles/; for i in `cat Base`; do [ "`grep "$i" Full`" ] || echo $i; done
# for i in *; do [ -d $i/Settings ] && { diff -r $i/Settings $i/Current/Resources/Defaults/Settings &> /dev/null  || echo $i; }; done

