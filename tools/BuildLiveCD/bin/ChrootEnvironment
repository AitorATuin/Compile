#!/bin/sh

for conf in ./Master.conf /System/Settings/BuildLiveCD/Master.conf fail
do
   if [ "$conf" = "fail" ]
   then
      echo "Could not find Master.conf."
      exit 1
   elif [ -e $conf ]
   then
      source $conf
      break
   fi
done

mp="Output/Environment"

mkdir -p ${mp}

if [ "$UID" != "0" ]
then
    echo "Running as superuser."
    exec sudo -u "#0" $0 $*
fi

if [ -d "$mp" ]
then
   echo "Unionfs mounting layers."
   unionfs_dirs=`echo "${chroot_layers[@]}" | tr " " ":"`
echo   mount -t unionfs -o "dirs=${unionfs_dirs}" none ${mp}
   mount -t unionfs -o "dirs=${unionfs_dirs}" none ${mp}
   
   mkdir -p Output/Chroot_Mount_CD-ROM/{Programs_Local,Depot_Local,Users_Local,Packages}

   # Convenience access to directories from the host environment
   echo "Binding ${mp}/Mount/CD-ROM ..."
   mount -o bind Output/Chroot_Mount_CD-ROM ${mp}/Mount/CD-ROM
   mount -o bind /Programs                  ${mp}/Mount/CD-ROM/Programs_Local
   mount -o bind /Depot                     ${mp}/Mount/CD-ROM/Depot_Local
   mount -o bind /Users                     ${mp}/Mount/CD-ROM/Users_Local
   mount -o bind Archives/Packages          ${mp}/Mount/CD-ROM/Packages

   echo "        ${mp}/System/Kernel/Devices ..."
   mount -o bind /System/Kernel/Devices ${mp}/System/Kernel/Devices
   echo "        ${mp}/System/Kernel/Status ..."
   mount -o bind /System/Kernel/Status ${mp}/System/Kernel/Status

   echo "Chrooting into ${mp} "
   chroot ${mp}

   sync

   #####################################################################

   echo "Cleaning up /tmp..."
   rm -fr -- ${mp}/tmp/*

   echo "Unmounting:"
   mp_path=`readlink -f ${mp}`
   cat /proc/mounts | tac | cut -d' ' -f2 |grep $mp_path | \
   while read dir
   do
      echo "  ${dir}"
      umount "${dir}"
   done

   rmdir --ignore-fail-on-non-empty -p Output/Chroot_Mount_CD-ROM/{Programs_Local,Depot_Local,Users_Local,Packages}

else
   echo "Error: $mp doesn't exist."
fi

# additional things to check before releasing a LiveCD
# cd /Programs/; time for i in *; do echo $i; mkdir $i/Current/Resources/; Dependencies $i > $i/Current/Resources/Dependencies; done
# cd /Programs/; du --max-depth=1 > /Depot/Install/Wizard/Auxiliary/Programs_du.txt
# cd /Programs/; \ls > /Depot/Install/Wizard/Profiles/Full
# cd /Programs/; grep Warn */Current/Resources/Dependencies
# cd /Depot/Install/Wizard/Profiles/; for i in `cat Typical`; do [ "`grep "$i" Full`" ] || echo $i; done
# cd /Depot/Install/Wizard/Profiles/; for i in `cat Base`; do [ "`grep "$i" Full`" ] || echo $i; done
# for i in *; do [ -d $i/Settings ] && { diff -r $i/Settings $i/Current/Resources/Defaults/Settings &> /dev/null  || echo $i; }; done

