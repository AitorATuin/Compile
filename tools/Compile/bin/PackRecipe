#!/bin/sh

##################################################
# Imports
##################################################

. ScriptFunctions
Import OptionParser
Import File
Import GoboLinux

##################################################
# Options and configuration
##################################################

Parse_Conf Compile.conf

scriptDescription='Generate "packed recipes", ready for submission.'
scriptCredits="(C) 2003-2004 Carlo Calica et al. Released under the GNU GPL."
scriptUsage="[<program> [<version>]]"
scriptNotes="Given no arguments, this script will take all recipes in $compileLocalRecipesDir and "\
"pack them as Foo--1.0--recipe.tar.bz2 files at $compilePackedRecipesDir."
Add_Option_Boolean "L" "no-lint" "Do not verify recipes (not recommended)."
Add_Option_Boolean "W" "no-web" "Offline operation when running RecipeLint (avoid if possible)."
Parse_Options "$@"

if Boolean "no-web"
then noweb=--no-web
else noweb=
fi

Verify_Superuser "$compilePackedRecipesDir"

##################################################
# Helper functions
##################################################

Import Compile

##################################################
# Prepare Environment
##################################################

assert_dir "$compilePackedRecipesDir"
assert_dir "$compileLocalRecipesDir"

##################################################
# Operation
##################################################

pack_recipe() {
   name="$1"
   version="$2"
   archive="$name--$version--recipe.tar.bz2"
   Log_Verbose "Package: $archive"
   cd "$compileLocalRecipesDir"
   tarball="$compilePackedRecipesDir/$name--$version--recipe.tar.bz2"

   create_tarball() {
      recipe="$name/$version/Recipe"
      resources="$name/$version/Resources"
      description="$resources/Description"
      Exists "$recipe" || return 1
      if ! Exists "$description"
      then
         Quiet mkdir "$resources"
         DescribeProgram --mode=ascii "$name" > "$description" || {
            rm "$description"
            Quiet rmdir "$resources"
         }
      fi
      #remove backups
      find "$name/$version" | grep -E '~$' | xargs -i rm -f {}
      Verbose tar cjvf "$tarball" --exclude=.svn "$name/$version" || return 1
      touch "$tarball" --reference="$name/$version/Recipe"
      return 0
   }

   if create_tarball
   then
      Boolean "no-lint" || RecipeLint $noweb "$tarball"
      Log_Normal "Packed $tarball"
   else
      Log_Error "Failed packing $tarball"
   fi
}

pack_all_versions() {
   for version in "$compileLocalRecipesDir/$1/"*
   do
      [ -L "$version" ] && continue
      pack_recipe "$1" `basename "$version"`
   done
}

if [ "$(Arg 1)" ]
then
   name=`ls "$compileLocalRecipesDir" | grep -i "^$(Arg 1)$"`
   if [ ! "$name" ]
   then Die "Could not find recipe directory for $(Arg 1) in $compileLocalRecipesDir."
   fi
   if [ "$(Arg 2)" ]
   then pack_recipe "$name" "$(Arg 2)"
   else pack_all_versions "$name"
   fi
else
   export lsfile="$compilePackedRecipesDir/RecipeList"
   for name in "$compileLocalRecipesDir/"*
   do
       name=`basename "$name"`
       pack_all_versions "$name"
   done
   cd "$compilePackedRecipesDir"
   ls *--recipe.tar.bz2 >"$lsfile"
fi

