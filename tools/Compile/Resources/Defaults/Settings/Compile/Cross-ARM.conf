#
# Cross-Compiler variables
#

. GoboPath

# prefix to every $goboPath variable (e.g: /Depot/Cross)
export crossPrefixDir="/Depot/GP32Linux"

# toolchainDir must be set to the root dir of your toolchain
toolchainDir="/usr/local/toolchain/gcc-3.3.x"
toolchainBinDir="$toolchainDir/toolchain_arm/bin"
toolchainLibDir="$toolchainDir/toolchain_arm/lib"
toolchainSysIncDir="$toolchainDir/toolchain_arm/usr/include"
toolchainGCCIncDir="$toolchainLibDir/gcc-lib/arm-linux/3.3.2/include"
crossCompiler="arm-linux-"


# environment variable replacements follow 
export MACHINE_ARCH="arm-9tdmi"
export MACHINE="arm-linux"
export HOST="i686-pc-linux-gnu"
export ARCH="arm"

#
# usually you won't need to replace the data below
#
export LDFLAGS="-L${crossPrefixDir}/${goboLibraries}"
export CFLAGS="-nostdinc -I${toolchainSysIncDir} -I${toolchainGCCIncDir} -I${crossPrefixDir}/${goboHeaders}"
export CXXFLAGS="${CFLAGS}"
export C_INCLUDE_PATH="${crossPrefixDir}${goboHeaders}"
export CPLUS_INCLUDE_PATH="${C_INCLUDE_PATH}"

export AR="${crossCompiler}ar"
export AS="${crossCompiler}as"
export CC="${crossCompiler}gcc"
export CPP="${crossCompiler}cpp"
export CXX="${crossCompiler}g++"
export CXXCPP="${crossCompiler}cpp"
export FC="${crossCompiler}f77"
export LD="${crossCompiler}ld -rpath-link ${crossPrefixDir}/${goboLibraries}"
export NM="${crossCompiler}nm"
export RANLIB="${crossCompiler}ranlib"
export SIZE="${crossCompiler}size"
export ADDR2LINE="${crossCompiler}addr2line"
export GASP="${crossCompiler}gasp"
export OBJCOPY="${crossCompiler}objcopy"
export OBJDUMP="${crossCompiler}objdump"
export STRINGS="${crossCompiler}strings"
export STRIP="${crossCompiler}strip"

export PATH="${toolchainBinDir}:$PATH"
export GCC_EXEC_PREFIX="${toolchainLibDir}"
export PKG_CONFIG_PATH="${crossPrefixDir}/${goboLibraries}/pkgconfig"
