
DIFFERENCES BETWEEN GOBOLINUX AND A TRADITIONAL LINUX SYSTEM

If you are used to other Linux distributions, you will soon find that
GoboLinux is quite different than most (if not all) of them. Here's
a summary of the main differences, to get you started:

1) The superuser is 'gobo', not 'root'

   A little known UNIX rule states that what defines the superuser is its
   user id (which is zero), not its name. Through the years, there has been
   a convention to call the superuser "root". In GoboLinux, we chose to
   choose the superuser's name. It's called "gobo". It's fun, less
   ambiguous and even a bit more secure (since most crackers will try to
   login in your machine as root, you can setup a dummy, easy-to-break
   "root" account that will serve as a cracker-trap). In any case, if you
   wish to change the superuser's name back to "root", it is easy to do so.

2) Lots of new directories, but old ones still work

   In the GoboLinux hierarchy, files are grouped by their functional
   category (executables, libraries, and so on). There are links at the
   classic directories you are used to (/bin, /usr/bin, and so on), but 
   remember that they all point to the same place. This is a huge
   advantage, as it means, for example, that you'll never have to search
   for a library throughout your filesystem again -- it will always be in
   /lib (and in /usr/lib, because they point to the same place! -- no
   worries about compatibility).

3) Users are on '/Users', mount points are on '/Mount'

   There are symbolic links relating most of the usual UNIX directories to
   the GoboLinux tree. Therefore, you will find directories such as /etc,
   /var/log and /usr/bin in the expected places. However, some directories,
   such as the users' directories, didn't need to be linked to their
   "legacy" locations. This way, for a given user called "joe", you'll
   have, instead of /home/joe, /Users/joe. Notice also that the superuser's
   directory is no different than the ones from the other users, so, gobo's
   directory is at /Users/gobo. Mount points are under /Mount, not /mnt.

4) Boot scripts are neither BSD or System V

   Another major difference between GoboLinux and most Linux distributions
   is that it does not use a BSD nor a System V initialization procedure.
   Instead, it has its own. At /System/Settings/BootScripts you will find
   a few files that command the entire boot procedure: BootUp and Shutdown run
   at system boot and shutdown, respectively; Console and Graphic are used
   after BootUp for initialization of console or graphic (xdm, kdm...) modes. 
   Halt and Reboot are used after Shutdown for each specific kind of finalization.
   The BootOptions file separate site-specific settings from the rest of the
   scripts, and Tasks serves as a function library.

