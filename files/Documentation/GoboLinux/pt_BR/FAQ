
FAQ (PERGUNTAS FREQUENTEMENTE RESPONDIDAS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Q: O que é o GoboLinux?
-----------------------

GoboLinux é uma distribuição Linux que rompe com a hierarquia tradicional
de diretórios do Unix. Basicamente, isto significa que não existem diretórios
tais como /usr e /etc. A idéia principal da hierarquia alternativa é a
de armazenar todos os arquivos pertencentes a uma aplicação na sua própria
sub-árvore separada; desta forma, temos diretórios como
/Programs/GCC/2.95.3/lib.

Para permitir que o sistema encontre estes arquivos, eles estão logicamente
agrupados em diretórios como /System/Links/Executables, que, como você deve
imaginar, contém links simbólicos para todos os executáveis dentro da
hierarquia Programs.

Para manter compatibilidade com aplicações tradicionais do Unix/Linux,
existem links simbólicos que reproduzem a árvore Unix, como "/usr/bin ->
/System/Links/Executables", e "/sbin -> /System/Links/Executables"
(este exemplo mostra que a diferenciação arbitrária entre arquivos de
uma mesma categoria também foi removida).

Q: Ela é uma distribuição orientada a iniciantes?
-------------------------------------------------

Não, ela não é. Ela é guiada à de pessoas que prefiram instalar as suas
aplicações a partir dos códigos fonte originais. Esta é a maior razão pela
qual cada aplicação recebe seu próprio diretório: assim é possível instalá-lo
a partir de seu código fonte e então removê-lo com um "rm -rf". Então, como
você pode ver, o GoboLinux é orientado para o usuário experiente que não
gosta que as coisas sejam feitas automagicamente. Nossos scripts servem como
meros automatizadores de procedimentos, mas eles não "tomam desisões", e caso
haja alguma necessidade, eles irão perguntar antes.

A coleção de pacotes binários foi criada como uma forma de evitar duplicação
de trabalho entre os usuários. O projeto de pacotes source foi criado para
armazenar "regras de compilação" dos reais pacotes source das aplicações.
Nós não queremos estabelecer um "modelo de empacotamento" como o RPM.
Achamos que não há uma verdadeira necessidade de "pacotes" se o original
.tar.gz estiver propriamente feito. Por exemplo, quando uma aplicação usa
os GNU AutoTools (autoconf, automake, ...) você não precisa de nenhum pacote
GoboLinux para manter seu sistema consistente.

Entretanto, com esta árvore de diretórios mais lógica, o GoboLinux poderia
servir, com uma coleção grande de pacotes binários e front-ends gráficos
para os scripts, como uma distribuição amigável a iniciantes, mas este não
é um objetivo específico pelo qual procuramos (ao menos não em curto ou
médio prazo).

Q: Qual é o seu status atual?
-----------------------------

Esta poderia ser dividida em duas questões, uma sobre o status das
ferramentas do GoboLinux, e outra sobre a disponibilidate dos pacotes.

O GoboLinux conta com uma série de ferramentas que automatizam várias
tarefas, como a geração, instalação e remoção de pacotes, e mais o
importante, manutenção dos links simbólicos que mantém o sistema consistente.
Estas ferramentas (em sua maior parte shell scripts, atualmente) são
consideravelmente estáveis, já que a idéia por trás do GoboLinux não é nova
(veja as questões sobre as origens do GoboLinux).

Outra importante nota para quando estiver usando a distribuição é a
disponibilidade de pacotes, isto é, software que pode ser baixado em forma
binária e instalado de forma fácil. Neste aspecto, o GoboLinux é bastante
novo e ainda longe das distribuições já estabelecidas. Nós temos, no entanto,
todos os pacotes necessários para ter um sistema rodando (todos os pacotes
que fazem parte dos projetos "Linux From Scratch" e "Beyond Linux From
Scratch", por exemplo), e muitos outros, como o KDE e todos os pacotes
relacionados, Tcl/Tk, e a lista não pára de crescer.

Q: Quais são os seus objetivos quanto ao GoboLinux?
---------------------------------------------------

O primeiro objetivo é ter um sistema que nós iremos gostar de usar, que
não será destruído por algum pacote estúpido de gerenciamento de software
que tenta administrar nossa máquina por nós. A maior parte das distribuições
baseadas em Linux tentam deixar a vida mais fácil para os usuários novatos,
mas desta forma eles estão fazendo a vida muito mais difícil para os usuários
mais experientes. Não digo que GoboLinux é mais fácil, apenas que ele "faz
mais sentido". No entanto, pessoas que o usam dizem que ele é de fato mais
fácil de administrar, dado que ele permite que você entenda seu sistema
melhor (se você estiver disposto a entendê-lo).

Nós costumamos dizer brincando que GoboLinux é "sua última distribuição
Linux", porque nós o achamos muito mais fácil de manter atualizado do que
outras distribuições normais. Desde que mudei para um sistema no estilo do
GoboLinux, eu apenas tive que reinstalar o sistema operacional uma única
vez, no evento da Grande Falha do sistema de arquivos.

A dominação do mundo é apenas um objetivo secundário.

Q: Quais são as origens do GoboLinux?
-------------------------------------

O GoboLinux amadureceu bastante em um período de dois anos. Inicialmente ele
começou como uma forma de instalar programas facilmente dentro de uma conta
de um usuário comum na Universidade (já que eu não tinha a árvore real do
Linux disponível para mim, escolhi criar minha própria, corrigindo o que eu
via como problemas na outra). Então movi o sistema para meu computador de
casa, e ele co-existia com a árvore usual do Unix -- eu o costumava chamar de
LodeLinux, devido ao meu nickname na internet.

Um dia, após a grande falha do sistema de arquivos, tive que reinstalar meu
sistema inteiro, e pensei em usar, no novo sistema, apenas a árvore
alternativa (no sistema antes do crash, ela já abrigava cerca de 80% de todos
os softwares instalados). Detsch também estava considerando reinstalar seu
Linux, então nós pegamos uma semana na sua casa, e fizemos o processo inteiro
do Linux From Scratch, mudando-o para usar a árvore de diretórios alternativa.
Nós o nomeamos GoboLinux devido a Gobo, nosso consultor financeiro, mentor
espiritual e personal trainer.

Q: Quem desenvolve o GoboLinux?
-------------------------------

GoboLinux foi primeiramente desenvolvido por Hisham Muhammad e Andre
Detsch, como sucessor de um experimento de Hisham, o LodeLinux. Desde então,
nós começamos a receber mais e mais usuários que, no verdadeiro espírito do
Software Livre, estão também contribuindo para o projeto. Guilherme Bedin,
orgulhosamente o Usuário GoboLinux #3, comecou o processo de empacotar o sistema
em um CD. À medida em que o tempo passa, mais e mais pessoas estão entrando 
no projeto. Lucas Correia Villa Real é nosso kernel hacker usual, com contribuições
importantes de Felipe Damasio. Desde a versão 006, pessoas de todo o mundo estão
contribuindo para o GoboLinux, nomes demais para listar aqui.


Q: Existe uma perda de performance no uso de links simbólicos, levando o
------------------------------------------------------------------------
GoboLinux a ser uma má escolha para, digamos, servidores altamente
------------------------------------------------------------------
sobrecarregados?
----------------

A resposta curta: sim, existe, ao menos teoricamente, uma perda de
performance, e não, nós nunca a medimos (para saber por que escrevi
teoricamente, leia a "resposta longa").

A resposta longa: o impacto atual do uso de links simbólicos é provavelmente
menor do que você imagina. Em uma distribuição regular Linux, bibliotecas já
encontram-se atualmente sendo acessadas através de links simbólicos. No
GoboLinux, nossos links apontam diretamente para o arquivo final, então
existe apenas um nível de indireção para encontrar a biblioteca.

Pegue a libc.so.6 por exemplo. Ela encontra-se em /lib, que é um link para
/System/Links/Libraries, mas o arquivo atual encontra-se em
/Programs/Glibc/Current, onde Current é um link para 2.2.3, e dentro do
diretório lib da Glibc, você terá um arquivo libc.so.6 que é na verdade um
link para libc-2.2.3.so. Então existe uma série de links, correto? No entanto,
as bibliotecas são acessadas da seguinte forma: o diretório
/System/Links/Libraries (que não é um link) é o único diretório na
configuração do ldconfig (e no LD_LIBRARY_PATH). Lá, libc.so.6 aponta
diretamente para /Programs/Glibc/2.2.3/lib/libc-2.2.3.so (nenhum há nenhum
link neste caminho todo). Então temos exatamente um nível de indireção, assim
como em distribuições comuns de Linux. Você pode *ver* uma grande quantidade
de links, mas eles estão lá mais para facilitar a manutenção do sistema.

Aplicações também são compiladas com --prefix configurado para seus "homes"
em /Programs/App/versão, então quando um programa procurar por arquivos de
dados ele não irá através dos links. Procurar por executáveis envolve ir
através de um link mas, diferente de distribuições Linux regulares, ele não
precisa procurar através de todos itens do PATH (e eu acredito que a
estrutura de árvores do ReiserFS de um diretório é mais otimizada do que a
busca que o shell irá fazer através dos elementos do $PATH. É claro, pode
sempre haver a hash da shell, mas também há sempre a cache do sistema de
arquivos).

Q: O que é /Depot? O que é /Files?
----------------------------------

/Depot é uma "área livre" para armazenar seus documentos, como arquivos de
mídia, downloads diversos, etc. Você pode vê-lo como uma "área comunitária",
um "home para todos usuários" (alguns sistemas UNIX tem um diretório /pub
para este propósito). O GoboLinux como sistema ignora o conteúdo do /Depot --
ele apenas existe para encorajar os usuários a armazenar seus arquivos
aleatórios em um único lugar do sistema e manter o resto do sistema limpo.

/Files, por outro lado, é um diretório padrão do GoboLinux. Dentro dele,
existem diretórios como Fonts e Plugins, onde arquivos compartilhados que
são necessários por aplicações (mas não necessariamente partes delas) são
armazenados.

Q: Quem é Gobo?
---------------

Se você quer mesmo mesmo mesmo saber, veja a página em
http://www.gobolinux.org/cartoon, mas esteja alertado.

